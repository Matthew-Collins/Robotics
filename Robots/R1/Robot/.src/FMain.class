' Gambas class file

Public fLSpeed As Float                                                     'Left speed variable
Public fRSpeed As Float                                                     'Right speed variable
Public fSpeed As Float                                                      'General speed
Public sDirection As String = "f"                                           'Direction variable
Public sPath As String = "robot"                                            'Location of the python file
Public siPositionU As Short                                                 'Up and down position
Public siPositionL As Short                                                 'Left and right position
Public fDelay As Float = 0.25                                                'Delay value
Public bZeroTrigger As Boolean                                              'Used to ensure the motors are switched to zero speed once

Public Sub Form_Open()                                                      'Got to start somewhere!

Application.MainWindow = Me                                                 'This form is the MainWindow so if another widow from this program is open when you close this form both forms will close
Me.Center                                                                   'Centre the form on the screen (Not reqiuired from Gambas 3.8.4)
ButtonCentre_Click                                                          'Centre the camera
ButtonCentre_Click                                                          'Centre the camera (seems to need twice sometimes to wake it up!)
Timer1.delay = 1000                                                         'Set the timer delay (1000 = 1 second)
Timer1.Start                                                                 'Start the timer
' Timer2.delay = 1000                                                          'Set the timer delay (1000 = 1 second)
' Timer2.Start                                                                'Start the timer

End

Public Sub SliderSpeed_Change()                                             'What to do if the slider changes

fSpeed = SliderSpeed.Value                                                  'Change the value of the fSpeed variable to match the Slider value
If Timer1.Enabled = False Then Timer1.Start                                'If the Timer is not running then start it

End

Public Sub DialSteer_Change()                                               'What to do if the Dial is changed

If Timer1.Enabled = False Then Timer1.Start                                 'If the Timer is not running then start it

If DialSteer.value = 0 Then                                                 'If steering straight ahead
  fRSpeed = fSpeed                                                          'Right motor speed
  fLSpeed = fSpeed                                                          'Left motor speed
Endif

If DialSteer.value < 0 Then                                                 'If steering left
  fRSpeed = fSpeed                                                          'Right motor stays at the speed set
  fLSpeed = fSpeed - (fSpeed / 100) * Abs(DialSteer.value)                  'Left motor is slowed depending on how far the control is rotated
Endif

If DialSteer.value > 50 Then                                                 'If steering right
  fRSpeed = fSpeed - (fSpeed / 100) * DialSteer.Value                        'Right motor is slowed depending on how far the control is rotated
  fLSpeed = fSpeed                                                           'Left motor stays at the speed set
Endif

End

Public Sub DriveRobot()                                                     'Drive the motors

If fSpeed = 0 Then                                                          'If the speed is zero then..
  ButtonSTOP_Click                                                          'STOP EVERTHING!
  If bZeroTrigger Then Return                                               'Get out of here but only after being through this routine once when the speed is zero
  bZeroTrigger = True                                                       'If speed = zero then don't come this way next time
End If

If fSpeed > 0 Then bZeroTrigger = False                                     'Reset bZeroTrigger if the speed is greater than zero

Shell "cd ~/robot && sudo python motor.py -d " & sDirection & " -ls " & fLSpeed & " -rs " & fRSpeed
                                                                            'Send all the necessary to the Python script
End

Public Sub ButtonSTOP_Click()                                               'What to do if the STOP! button is clicked

Timer1.Stop                                                                 'Stop the timer
Shell "cd ~/robot && sudo python stop.py"                                   'Send the robot the stop EVERYTHING message!
SliderSpeed.Value = 0                                                       'Reset the Speed slider
DialSteer.Value = 0                                                         'Reset the steering to centre

End

Public Sub form_Close()                                                     'What to do if the program is closed

ButtonSTOP_Click                                                            'STOP EVERTHING!

End

Public Sub Timer1_Timer()                                                   'The timer
'Dim sTempDirection As String                                                 'Variable display for development only

Exit Sub


If fSpeed = 0 Then Return

DialSteer_Change                                                            'Get the steering settings
DriveRobot                                                                  'Keep sending those commands to the robot........

' If sDirection = "f" Then                                                    'Variable display for development only
'   sTempDirection = "Forward"
' Else
'   sTempDirection = "Reverse"
' End If

' LabelVar.text = "Direction= " & sTempDirection
' LabelVar.text &= "\nSpeed = " & fSpeed
' LabelVar.text &= "\nLeft  " & fLSpeed
' LabelVar.text &= "\nRight  " & fRSpeed

End

Public Sub RButtons_Click()                                                 'What to do if the Radio Buttons are clicked

If RadioForward.Value = True Then                                           'If the 'Forward' button is clicked then..
  sDirection = "f"                                                          'Set the Direction to 'f' (Forward)
Else                                                                        'Else..
  sDirection = "b"                                                          'Set the Direction to 'b' (Reverse - backwards)
Endif

End

Public Sub Form_KeyPress()                                                  'Keyboard contol
Dim siValue As Short

If Key.code = key.Left Then                                                 'If the Left Arrow is pressed
  siValue = DialSteer.value - 5                                             'Decrease value
  If siValue < -100 Then siValue = -100                                     'Check new value is valid
  DialSteer.value = siValue                                                 'Apply new value to Steering Dial
Endif

If Key.code = key.Right Then                                                'If the Right Arrow is pressed
  siValue = DialSteer.value + 5                                             'Increase value
  If siValue > 100 Then siValue = 100                                       'Check value is valid
  DialSteer.value = siValue                                                 'Apply new value to Steering Dial
Endif

If Key.code = key.Up Then                                                   'If Up Arrow is pressed
  siValue = SliderSpeed.value + 5                                           'Increase value
  If siValue > 100 Then siValue = 100                                       'Check new value is valid
  SliderSpeed.value = siValue                                               'Apply new value to Speed Slider
Endif
' 
If Key.code = key.Down Then                                                 'If Down Arrow is pressed
  siValue = SliderSpeed.value - 5                                           'Decrease value
  If siValue < 0 Then siValue = 0                                           'Check new value is valid
  SliderSpeed.value = siValue                                               'Apply new value to Speed Slider
Endif

If Key.code = key.Space Then ButtonSTOP_Click                               'If the Space bar is pressed SOTP everything!

If Key.code = key.Shift Then DialSteer.value = 50                           'If the Shift key is pressed centre the steering

If Key.Code = Key["F"] Then RadioForward.Value = True                       'If the 'F' key is pressed set drive forward
If Key.Code = Key["R"] Then RadioReverse.Value = True                       'If the 'F' key is pressed set drive reverse

End

Public Sub ButtonHelp_Click()

Help.show                                                                   'Open the Help form

End

Public Sub ButtonCentre_Click()

SliderLeft.Value = -475                                                     'Set the left/right slider to middle position
SliderUP.Value = -400                                                       'Set the up/down slider to middle position
SliderUP_MouseUp()                                                          'Set the up and down servo
SliderLeft_MouseUp()                                                        'Set the left and right servo

End

Public Sub SliderUP_MouseUp()                                               'Controls up and down movement
Dim sShellString As String                                                  'To store the string to shell

siPositionU = Abs(SliderUP.Value)                                           'Set the variable dependent on the slide position

sShellString = "cd " & User.Home &/ sPath &/ " && " & " sudo python servo.py" & " -s " & Str(14) & " -p " & Str(siPositionU) & " -d " & Str(fDelay)
Shell sShellString                                                          'Build the string and shell it

End

Public Sub SliderLeft_MouseUp()                                             'Controls the left and right movement
Dim sShellString As String                                                  'To store the string to shell

siPositionL = Abs(SliderLeft.Value)                                         'Set the variable dependent on the slide position

sShellString = "cd " & User.Home &/ sPath &/ " && " & " sudo python servo.py" & " -s " & Str(15) & " -p " & Str(siPositionL) & " -d " & Str(fDelay)
Shell sShellString                                                          'Build the string and shell it
  
End

Public Sub ButtonLeft_Click()

SliderLeft.Value = -575                                                     'Set the left/right slider to middle position
SliderUP.Value = -400                                                       'Set the up/down slider to middle position
SliderUP_MouseUp()                                                          'Set the up and down servo
SliderLeft_MouseUp()                                                        'Set the left and right servo

End

Public Sub ButtonRight_Click()

SliderLeft.Value = -375                                                       'Set the left/right slider to middle position
SliderUP.Value = -400                                                         'Set the up/down slider to middle position
SliderUP_MouseUp()                                                            'Set the up and down servo
SliderLeft_MouseUp()                                                          'Set the left and right servo

End

Public Sub Timer2_Timer()                                                     'Timer to control the results of the Sonar and IR sensors
Dim sShellString, sDistance As String                                         'Strings for shelling and holding the distance provided by the sonar
Dim siDistance As Short                                                       'To hold the distance as an integer
Dim sLeft, sRight, sTemp As String                                            'Strings for Left & Right IR sensor and sTemp for temporary use
Dim sResult As String[] 

sShellString = "cd " & User.Home &/ sPath &/ " && " & " sudo python Sonar.py" 'Create string to send the necessary to get Python to put the Sonar details in a file
Shell sShellString                                                            'Shell the string

sDistance = File.Load(User.Home &/ sPath &/ "Sonar.txt")                      'Upload the resultant file int sDistance

Try siDistance = Val(sDistance)                                               'Convert distance string result to an integer
                                                                              'The following lines change the colour of the background depending on the distance away from an object
If siDistance > 29 Then                                                       'If distance is greater than 29cms then
  LabelSonar.Background = Color.Green                                         'Change background to Green
  LabelSonar.Foreground = Color.Black                                         'Change the text colour to Black
  LabelSonar.Font.Bold = False                                                'Change the text to no be Bold
Endif

If siDistance < 30 And siDistance > 19 Then                                   'If distance is less than 30cms AND greater than 19cms then
  LabelSonar.Background = Color.Yellow                                        'Change background to Yellow
  LabelSonar.Foreground = Color.Black                                         'Change the text colour to Black
  LabelSonar.Font.Bold = False                                                'Change the text to no be Bold
Endif

If siDistance < 20 Then                                                       'If distance is less than 20cms then
  LabelSonar.Background = Color.Red                                           'Change background to Red
  LabelSonar.Foreground = Color.Yellow                                        'Change the text colour to Yellow
  LabelSonar.Font.Bold = True                                                 'Change the text to Bold
Endif

LabelSonar.Text = "Object distance = " & Str(siDistance) & "cms"              'Print the result to the form

Shell "cd " &/ User.home &/ spath &/ " && sudo python ir.py"                  'Shell the necessary to get the state of the IR Sensors

sTemp = File.Load(User.home &/ sPath &/ "ir.txt")                             'Load the resuting file into sTemp
sResult = Split(sTemp, " ")                                                   'Slit sTemp into its 2 components

Try sLeft = sResult[0]                                                        'Put the left sensor result in sResult[0]
Try sRight = sResult[1]                                                       'Put the right sensor result in sResult[1]

If InStr(sLeft, "True") Then                                                  'If the Left IR sensor has detected an object then
  LabelIRLeft.Background = Color.Red                                          'Change the background colour to Red
  LabelIRLeft.Foreground = Color.Yellow                                       'Change the foreground colour to Yellow
Else                                                                          'Otherwise
  LabelIRLeft.Background = Color.Green                                        'Change the background colour to Green
  LabelIRLeft.Foreground = Color.Black                                        'Change the foreground colour to Black
Endif

If InStr(sRight, "True") Then                                                 'If the Right IR sensor has detected an object then
  LabelIRRight.Background = Color.Red                                         'Change the background colour to Red
  LabelIRRight.Foreground = Color.Yellow                                      'Change the foreground colour to Yellow
Else                                                                          'Otherwise
  LabelIRRight.Background = Color.Green                                       'Change the background colour to Green
  LabelIRRight.Foreground = Color.Black                                       'Change the foreground colour to Black
Endif

End

Public Sub ButtonYes_Click()                                                  'What to do if the 'Yes' button is clicked

YesNoHeadControl(True)                                                        'Call the YesNoHeadControl routine for 'Yes'

End

Public Sub ButtonNo_Click()                                                   'What to do if the 'No' button is clicked

YesNoHeadControl(False)                                                       'Call the YesNoHeadControl routine for 'No'

End

Public Sub YesNoHeadControl(bYes As Boolean)                                  'Does the necessary to 'Nod' or 'Shake' the camera and sonar
Dim fDelay1 As Float = 0.75                                                   'Set a delay value
Dim siCount As Short                                                          'Counter
Dim sShellString As String

ButtonCentre_Click                                                            'Centre the sonar sensor 
Wait fDelay1                                                                  'Wait

If Not bYes Then
  For siCount = 1 To 2                                                        'Send the following commands twice to get the sonar and camera to 'Shake its head'
    ButtonRight_Click
    Wait fDelay1
    ButtonLeft_Click
    Wait fDelay1
  Next
Else
  For siCount = 1 To 2                                                         'Send the following commands twice to get the sonar and camera to 'Nod'
    sShellString = "cd " & User.Home &/ sPath &/ " && " & " sudo python servo.py" & " -s " & Str(14) & " -p " & "266" & " -d " & Str(fDelay)
    Shell sShellString
    Wait fDelay1
    sShellString = "cd " & User.Home &/ sPath &/ " && " & " sudo python servo.py" & " -s " & Str(14) & " -p " & "566" & " -d " & Str(fDelay)
    Shell sShellString
    Wait fDelay1
  Next
Endif

End
