' Gambas class file

'Dependancy: Must have OzzMaker.com BerryIMU v1.6

'i2c Revisions
Const REVISION_PI1 As Integer = &H00
Const REVISION_PI2_AND_PI3 As Integer = &H01

'Registers / etc:
Const MAG_ADDRESS As Integer = &H1e
Const ACC_ADDRESS As Integer = &H1e
Const GYR_ADDRESS As Integer = &H6a

'LSM9DS0 Gyro Registers  
Const WHO_AM_I_G As Integer = &H0F
Const CTRL_REG1_G As Integer = &H20
Const CTRL_REG2_G As Integer = &H21
Const CTRL_REG3_G As Integer = &H22
Const CTRL_REG4_G As Integer = &H23
Const CTRL_REG5_G As Integer = &H24
Const REFERENCE_G As Integer = &H25
Const STATUS_REG_G As Integer = &H27
Const OUT_X_L_G As Integer = &H28
Const OUT_X_H_G As Integer = &H29
Const OUT_Y_L_G As Integer = &H2A
Const OUT_Y_H_G As Integer = &H2B
Const OUT_Z_L_G As Integer = &H2C
Const OUT_Z_H_G As Integer = &H2D
Const FIFO_CTRL_REG_G As Integer = &H2E
Const FIFO_SRC_REG_G As Integer = &H2F
Const INT1_CFG_G As Integer = &H30
Const INT1_SRC_G As Integer = &H31
Const INT1_THS_XH_G As Integer = &H32
Const INT1_THS_XL_G As Integer = &H33
Const INT1_THS_YH_G As Integer = &H34
Const INT1_THS_YL_G As Integer = &H35
Const INT1_THS_ZH_G As Integer = &H36
Const INT1_THS_ZL_G As Integer = &H37
Const INT1_DURATION_G As Integer = &H38

'LSM9DS0 Accel And Magneto Registers
Const OUT_TEMP_L_XM As Integer = &H05
Const OUT_TEMP_H_XM As Integer = &H06
Const STATUS_REG_M As Integer = &H07
Const OUT_X_L_M As Integer = &H08
Const OUT_X_H_M As Integer = &H09
Const OUT_Y_L_M As Integer = &H0A
Const OUT_Y_H_M As Integer = &H0B
Const OUT_Z_L_M As Integer = &H0C
Const OUT_Z_H_M As Integer = &H0D
Const WHO_AM_I_XM As Integer = &H0F
Const INT_CTRL_REG_M As Integer = &H12
Const INT_SRC_REG_M As Integer = &H13
Const INT_THS_L_M As Integer = &H14
Const INT_THS_H_M As Integer = &H15
Const OFFSET_X_L_M As Integer = &H16
Const OFFSET_X_H_M As Integer = &H17
Const OFFSET_Y_L_M As Integer = &H18
Const OFFSET_Y_H_M As Integer = &H19
Const OFFSET_Z_L_M As Integer = &H1A
Const OFFSET_Z_H_M As Integer = &H1B
Const REFERENCE_X As Integer = &H1C
Const REFERENCE_Y As Integer = &H1D
Const REFERENCE_Z As Integer = &H1E
Const CTRL_REG0_XM As Integer = &H1F
Const CTRL_REG1_XM As Integer = &H20
Const CTRL_REG2_XM As Integer = &H21
Const CTRL_REG3_XM As Integer = &H22
Const CTRL_REG4_XM As Integer = &H23 
Const CTRL_REG5_XM As Integer = &H24
Const CTRL_REG6_XM As Integer = &H25
Const CTRL_REG7_XM As Integer = &H26
Const STATUS_REG_A As Integer = &H27
Const OUT_X_L_A As Integer = &H28
Const OUT_X_H_A As Integer = &H29
Const OUT_Y_L_A As Integer = &H2A
Const OUT_Y_H_A As Integer = &H2B
Const OUT_Z_L_A As Integer = &H2C
Const OUT_Z_H_A As Integer = &H2D
Const FIFO_CTRL_REG As Integer = &H2E
Const FIFO_SRC_REG As Integer = &H2F
Const INT_GEN_1_REG As Integer = &H30
Const INT_GEN_1_SRC As Integer = &H31
Const INT_GEN_1_THS As Integer = &H32
Const INT_GEN_1_DURATION As Integer = &H33
Const INT_GEN_2_REG As Integer = &H34
Const INT_GEN_2_SRC As Integer = &H35
Const INT_GEN_2_THS As Integer = &H36
Const INT_GEN_2_DURATION As Integer = &H37
Const CLICK_CFG As Integer = &H38
Const CLICK_SRC As Integer = &H39
Const CLICK_THS As Integer = &H3A
Const TIME_LIMIT As Integer = &H3B
Const TIME_LATENCY As Integer = &H3C
Const TIME_WINDOW As Integer = &H3D

Public Accelerometer As I2c
Public Gyro As I2c

Public Sub _new()
  Me.Accelerometer = New I2c(REVISION_PI2_AND_PI3, ACC_ADDRESS)
  Me.Gyro = New I2c(REVISION_PI2_AND_PI3, GYR_ADDRESS)

  Me.Gyro.Detect

  'initialise the accelerometer
  Me.Accelerometer.Write8(CTRL_REG1_XM, &X01100111) 'z, y, x axis enabled, continuos update, 100 Hz data rate
  Me.Accelerometer.Write8(CTRL_REG2_XM, &X00100000) '+ / - 16 G full scale

  'initialise the gyroscope
  Me.Gyro.Write8(CTRL_REG1_G, &X00001111) 'Normal power mode, all axes enabled
  Me.Gyro.Write8(CTRL_REG4_G, &X00110000) 'Continuos update, 2000 dps full scale

End

Public Function AccelerometerX() As Integer
  Return Me.Accelerometer.Read16(OUT_X_L_G)
End

Public Function AccelerometerY() As Integer
  Return Me.Accelerometer.Read16(OUT_Y_L_G)
End

Public Function AccelerometerZ() As Integer
  Return Me.Accelerometer.Read16(OUT_Z_L_G)
End

Public Function GyroX() As Integer
  Return Me.Gyro.Read16(OUT_X_L_G)
End

Public Function GyroY() As Integer
  Return Me.Gyro.Read16(OUT_Y_L_G)
End

Public Function GyroZ() As Integer
  Return Me.Gyro.Read16(OUT_Z_L_G)
End

